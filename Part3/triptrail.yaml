openapi: 3.0.0
info:
  title: TripTrail API
  description: OpenAPI 3.0 specification for the REST API of the TripTrail app
  version: 3.0.0
servers:
- url: https://api.triptrail.com/v1
tags:
- name: TripPlan
  description: Everything about TripPlan
  externalDocs:
    description: Find out more
    url: https://swagger.io
- name: DailyPlan
  description: Everything about DailyPlan
  externalDocs:
    description: Find out more about our store
    url: https://swagger.io
- name: User
  description: Operations about user
- name: AIAssistant
  description: About AI chat
paths:
  /user:
    post:
      tags:
      - User
      summary: Create a new user
      operationId: signUp
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        "201":
          description: User created
        "400":
          description: Invalid input
  /user/login:
    put:
      tags:
      - User
      summary: Log in
      operationId: logIn
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        "201":
          description: User logged in
        "400":
          description: Invalid input
  /user/{userId}/tripPlan:
    post:
      tags:
      - TripPlan
      summary: Create a new trip plan
      operationId: createTripPlan
      parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        description: Trip plan details
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TripPlan'
        required: true
      responses:
        "201":
          description: Trip plan created
        "400":
          description: Invalid input
  /user/{userId}/tripPlan/{tripId}:
    get:
      tags:
      - TripPlan
      summary: Get trip plan by ID
      operationId: getTripPlan
      parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: string
      - name: tripId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Trip plan data
        "404":
          description: Trip plan not found
    put:
      tags:
      - TripPlan
      summary: Update trip plan by ID
      operationId: updateTripPlan
      parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: string
      - name: tripId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TripPlan'
        required: true
      responses:
        "200":
          description: Trip plan updated
        "404":
          description: Trip plan not found
    delete:
      tags:
      - TripPlan
      summary: Delete trip plan
      operationId: deleteTripPlan
      parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: string
      - name: tripId
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: Trip plan deleted
        "404":
          description: Trip plan not found
  /user/{userId}/tripPlan/{tripId}/share:
    post:
      tags:
      - TripPlan
      summary: Share a trip plan via generated link
      operationId: shareTripPlan
      parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: string
      - name: tripId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Share link generated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
        "404":
          description: Trip plan not found
  /user/{userId}/tripPlan/{tripId}/dailyPlan:
    get:
      tags:
      - DailyPlan
      summary: View daily plan
      operationId: viewDailyplan
      parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: string
      - name: tripId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Daily plan found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DailyPlan'
        "404":
          description: Failed to find requested daily plan
  /user/{userId}/tripPlan/{tripId}/activity/{activityId}/review:
    post:
      tags:
      - TripPlan
      summary: Add review to activity
      operationId: activityReview
      parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: string
      - name: tripId
        in: path
        required: true
        schema:
          type: string
      - name: activityId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Review'
        required: true
      responses:
        "200":
          description: Review added
        "400":
          description: Failed to add review
  /user/{userId}/tripPlan/{tripId}/AIAssistant/suggestions:
    post:
      tags:
      - AIAssistant
      summary: Ask the AI for suggestions
      operationId: aiAsk
      parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: string
      - name: tripId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          string:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: Sending activity suggestions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Activity'
        "400":
          description: No suggestions
  /user/{userId}/favorites:
    get:
      tags:
      - Favorites
      summary: Get user's favorites list
      operationId: getFavoritesList
      parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Favorites list
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Favorites'
    post:
      tags:
      - Favorites
      summary: Add activity to favorites
      operationId: addToFavorites
      parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        description: Activity to be added to favorites
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Favorites'
        required: true
      responses:
        "200":
          description: Activity added to favorites
    delete:
      tags:
      - Favorites
      summary: Remove activity from favorites
      operationId: removeFromFavorites
      parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: string
      - name: activityId
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Activity removed from favorites
  /user/{userId}/tripPlan/{tripId}/dailyPlan/{date}/activity/{activityId}/completed:
    post:
      tags:
      - DailyPlan
      summary: Mark activity as completed
      operationId: completedActivity
      parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: string
      - name: tripId
        in: path
        required: true
        schema:
          type: string
      - name: date
        in: path
        required: true
        schema:
          type: string
          format: date
      - name: activityId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Activity marked as completed
  /user/{userId}/tripPlan/{tripId}/regenerate:
    post:
      tags:
      - AIAssistant
      summary: Regenerate trip plan based on updated details
      operationId: regenerateTripPlan
      parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: string
      - name: tripId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: New plan generated
components:
  schemas:
    User:
      required:
      - email
      - password
      - username
      type: object
      properties:
        username:
          type: string
        password:
          type: string
        email:
          type: string
    TripPlan:
      required:
      - budget
      - destination
      - endDate
      - interests
      - origin
      - startDate
      type: object
      properties:
        tripId:
          type: string
        origin:
          type: string
        destination:
          type: string
        startDate:
          type: string
          format: date
        endDate:
          type: string
          format: date
        budget:
          type: number
          format: float
        purpose:
          type: string
        interests:
          type: array
          items:
            type: string
        notes:
          type: string
        collaborators:
          type: array
          items:
            type: string
        activities:
          type: array
          items:
            $ref: '#/components/schemas/Activity'
    DailyPlan:
      required:
      - activities
      - date
      properties:
        date:
          type: string
          format: date
        activities:
          type: array
          items:
            $ref: '#/components/schemas/Activity'
    Activity:
      required:
      - day
      - name
      - time
      type: object
      properties:
        activityId:
          type: string
        name:
          type: string
        location:
          type: string
        day:
          type: string
        time:
          type: string
        completed:
          type: boolean
        notes:
          type: string
    inline_response_200:
      type: object
      properties:
        link:
          type: string
    Review:
      required:
      - activityId
      - rating
      - reviewId
      properties:
        reviewId:
          type: string
        activityId:
          type: string
        rating:
          type: integer
        comment:
          type: string
        photoUrl:
          type: string
    Favorites:
      type: object
      properties:
        favoriteId:
          type: string
        activities:
          type: array
          items:
            $ref: '#/components/schemas/Activity'
